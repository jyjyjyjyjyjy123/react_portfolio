{"ast":null,"code":"var _jsxFileName = \"C:\\\\NS\\\\LJY\\\\frontend\\\\src\\\\components\\\\Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Modal from \"./Modal\";\n\n// 실제 프로젝트 예시 데이터\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projectData = [{\n  title: \"Portfolio Website\",\n  description: \"React + JS 기반 포트폴리오 사이트\",\n  img: \"/img/projects/portfolio.webp\",\n  github: \"https://github.com/username/portfolio\"\n}, {\n  title: \"Todo App\",\n  description: \"React 상태관리와 CRUD 기능 구현\",\n  img: \"/img/projects/todo.webp\",\n  github: \"https://github.com/username/todo-app\"\n}, {\n  title: \"Spring Boot API\",\n  description: \"Spring Boot REST API 서버 구축\",\n  img: \"/img/projects/spring-api.webp\",\n  github: \"https://github.com/username/spring-api\"\n}];\nexport default function Projects() {\n  _s();\n  const [selectedProject, setSelectedProject] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"projects\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-cards\",\n      children: projectData.map((p, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-card\",\n        onClick: () => setSelectedProject(p),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: p.img,\n          alt: p.title,\n          style: {\n            width: \"100%\",\n            borderRadius: \"8px\",\n            marginBottom: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: p.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: p.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), selectedProject && /*#__PURE__*/_jsxDEV(Modal, {\n      show: !!selectedProject,\n      onClose: () => setSelectedProject(null),\n      project: selectedProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Projects, \"HN9pdtfYpwVsoSKTsDvm2nr85II=\");\n_c = Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","projectData","title","description","img","github","Projects","_s","selectedProject","setSelectedProject","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","p","idx","onClick","src","alt","style","width","borderRadius","marginBottom","show","onClose","project","_c","$RefreshReg$"],"sources":["C:/NS/LJY/frontend/src/components/Projects.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Modal from \"./Modal\";\r\n\r\n// 실제 프로젝트 예시 데이터\r\nconst projectData = [\r\n  {\r\n    title: \"Portfolio Website\",\r\n    description: \"React + JS 기반 포트폴리오 사이트\",\r\n    img: \"/img/projects/portfolio.webp\",\r\n    github: \"https://github.com/username/portfolio\",\r\n  },\r\n  {\r\n    title: \"Todo App\",\r\n    description: \"React 상태관리와 CRUD 기능 구현\",\r\n    img: \"/img/projects/todo.webp\",\r\n    github: \"https://github.com/username/todo-app\",\r\n  },\r\n  {\r\n    title: \"Spring Boot API\",\r\n    description: \"Spring Boot REST API 서버 구축\",\r\n    img: \"/img/projects/spring-api.webp\",\r\n    github: \"https://github.com/username/spring-api\",\r\n  },\r\n];\r\n\r\nexport default function Projects() {\r\n  const [selectedProject, setSelectedProject] = useState(null);\r\n\r\n  return (\r\n    <section id=\"projects\">\r\n      <h2>Projects</h2>\r\n      <div className=\"project-cards\">\r\n        {projectData.map((p, idx) => (\r\n          <div\r\n            key={idx}\r\n            className=\"project-card\"\r\n            onClick={() => setSelectedProject(p)}\r\n          >\r\n            <img\r\n              src={p.img}\r\n              alt={p.title}\r\n              style={{ width: \"100%\", borderRadius: \"8px\", marginBottom: \"10px\" }}\r\n            />\r\n            <h3>{p.title}</h3>\r\n            <p>{p.description}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {selectedProject && (\r\n        <Modal\r\n          show={!!selectedProject}\r\n          onClose={() => setSelectedProject(null)}\r\n          project={selectedProject}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,SAAS;;AAE3B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG,CAClB;EACEC,KAAK,EAAE,mBAAmB;EAC1BC,WAAW,EAAE,yBAAyB;EACtCC,GAAG,EAAE,8BAA8B;EACnCC,MAAM,EAAE;AACV,CAAC,EACD;EACEH,KAAK,EAAE,UAAU;EACjBC,WAAW,EAAE,wBAAwB;EACrCC,GAAG,EAAE,yBAAyB;EAC9BC,MAAM,EAAE;AACV,CAAC,EACD;EACEH,KAAK,EAAE,iBAAiB;EACxBC,WAAW,EAAE,4BAA4B;EACzCC,GAAG,EAAE,+BAA+B;EACpCC,MAAM,EAAE;AACV,CAAC,CACF;AAED,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5D,oBACEG,OAAA;IAASU,EAAE,EAAC,UAAU;IAAAC,QAAA,gBACpBX,OAAA;MAAAW,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBf,OAAA;MAAKgB,SAAS,EAAC,eAAe;MAAAL,QAAA,EAC3BV,WAAW,CAACgB,GAAG,CAAC,CAACC,CAAC,EAAEC,GAAG,kBACtBnB,OAAA;QAEEgB,SAAS,EAAC,cAAc;QACxBI,OAAO,EAAEA,CAAA,KAAMX,kBAAkB,CAACS,CAAC,CAAE;QAAAP,QAAA,gBAErCX,OAAA;UACEqB,GAAG,EAAEH,CAAC,CAACd,GAAI;UACXkB,GAAG,EAAEJ,CAAC,CAAChB,KAAM;UACbqB,KAAK,EAAE;YAAEC,KAAK,EAAE,MAAM;YAAEC,YAAY,EAAE,KAAK;YAAEC,YAAY,EAAE;UAAO;QAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrE,CAAC,eACFf,OAAA;UAAAW,QAAA,EAAKO,CAAC,CAAChB;QAAK;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAClBf,OAAA;UAAAW,QAAA,EAAIO,CAAC,CAACf;QAAW;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAVjBI,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWL,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAELP,eAAe,iBACdR,OAAA,CAACF,KAAK;MACJ6B,IAAI,EAAE,CAAC,CAACnB,eAAgB;MACxBoB,OAAO,EAAEA,CAAA,KAAMnB,kBAAkB,CAAC,IAAI,CAAE;MACxCoB,OAAO,EAAErB;IAAgB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEd;AAACR,EAAA,CAjCuBD,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}